diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index e096b35..03b325c 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -58,14 +58,13 @@ include(gcc_version.cmake)
 # Figure out how to build and where to install the Python modules
 #
 
-set(Python_ADDITIONAL_VERSIONS "2.7")
 find_package(PythonInterp REQUIRED)
 
 if (APPLE)
   # Ask Python to tell us it's include directory, if nobody else has
   if(NOT DEFINED PYTHON_INCLUDE_DIRS)
     execute_process(COMMAND ${PYTHON_EXECUTABLE} -c
-      "from distutils.sysconfig import get_python_inc;print get_python_inc()"
+      "from distutils.sysconfig import get_python_inc;print(get_python_inc())"
       OUTPUT_VARIABLE PYTHON_INCLUDE_DIRS
       RESULT_VARIABLE PYTHON_INCLUDE_DIR_RESULT ERROR_QUIET)
     if(NOT PYTHON_INCLUDE_DIR_RESULT MATCHES 0)
@@ -77,7 +76,7 @@ if (APPLE)
   if(NOT DEFINED PYTHON_LIBRARY)
       # Get the library path
       execute_process(COMMAND "${PYTHON_EXECUTABLE}" -c
-        "from distutils import sysconfig;print sysconfig.get_config_var('LIBDIR')"
+        "from distutils import sysconfig;print(sysconfig.get_config_var('LIBDIR'))"
         OUTPUT_VARIABLE PYTHON_LIBRARY_DIR
         RESULT_VARIABLE PYTHON_LIBRARY_DIR_RESULT ERROR_QUIET)
       string(STRIP ${PYTHON_LIBRARY_DIR} PYTHON_LIBRARY_DIR)
@@ -87,7 +86,7 @@ if (APPLE)
 
       # Get library filename - might not be safe to assume .dylib extension?
       execute_process(COMMAND "${PYTHON_EXECUTABLE}" -c
-        "import sys;print 'libpython%d.%d.dylib'%sys.version_info[0:2]"
+        "import sys;print('libpython%d.%d.dylib'%sys.version_info[0:2])"
         OUTPUT_VARIABLE PYTHON_LIBRARY_FILE
         RESULT_VARIABLE PYTHON_LIBRARY_FILE_RESULT ERROR_QUIET)
       string(STRIP ${PYTHON_LIBRARY_FILE} PYTHON_LIBRARY_FILE)
@@ -103,13 +102,13 @@ endif (APPLE)
 # macOS: ${PYTHON_SITE_INSTALL_PREFIX}/lib/python2.7/site-packages
 # Windows: ${PYTHON_SITE_INSTALL_PREFIX}/Lib/site-packages
 execute_process(
-  COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print get_python_lib(False,False,'${PYTHON_SITE_INSTALL_PREFIX}')"
+  COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(False,False,'${PYTHON_SITE_INSTALL_PREFIX}'))"
   OUTPUT_VARIABLE Python_site_packages
   OUTPUT_STRIP_TRAILING_WHITESPACE
 )
 
 execute_process(
-  COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print get_python_lib(plat_specific=True,standard_lib=False,prefix='${PYTHON_SITE_INSTALL_PREFIX}')"
+  COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(plat_specific=True,standard_lib=False,prefix='${PYTHON_SITE_INSTALL_PREFIX}'))"
   OUTPUT_VARIABLE Python_arch_packages
   OUTPUT_STRIP_TRAILING_WHITESPACE
 )
@@ -157,12 +156,12 @@ endif(NOT BUILD_TYPE)
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
 # find BOOST and boost-python
-find_package( Boost COMPONENTS python REQUIRED)
+find_package( Boost COMPONENTS python3 REQUIRED)
 if(Boost_FOUND)
   include_directories(${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS})
   message(STATUS "found Boost: " ${Boost_LIB_VERSION})
   message(STATUS "boost-incude dirs are: " ${Boost_INCLUDE_DIRS})
-  message(STATUS "boost-python lib is: " ${Boost_PYTHON_LIBRARY})
+  message(STATUS "boost-python lib is: " ${Boost_PYTHON3_LIBRARY})
   message(STATUS "boost_LIBRARY_DIRS is: " ${Boost_LIBRARY_DIRS})
   message(STATUS "Boost_LIBRARIES is: " ${Boost_LIBRARIES})    
 endif()
@@ -344,8 +343,8 @@ if (BUILD_PY_LIB)
     
     )
 
-  message(STATUS "linking python binary ocl.so with boost: " ${Boost_PYTHON_LIBRARY})
-  target_link_libraries(ocl ocl_common ocl_dropcutter ocl_cutters  ocl_geo ocl_algo ${Boost_LIBRARIES}  ${PYTHON_LIBRARIES} -lboost_python -lboost_system)
+  message(STATUS "linking python binary ocl.so with boost: " ${Boost_PYTHON3_LIBRARY})
+  target_link_libraries(ocl ocl_common ocl_dropcutter ocl_cutters  ocl_geo ocl_algo ${Boost_LIBRARIES}  ${PYTHON_LIBRARIES} -lboost_python3 -lboost_system)
   # 
   # this makes the lib name ocl.so and not libocl.so
   set_target_properties(ocl PROPERTIES PREFIX "") 
